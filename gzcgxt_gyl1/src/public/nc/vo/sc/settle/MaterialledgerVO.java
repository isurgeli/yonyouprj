/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
 \***************************************************************/

package nc.vo.sc.settle;

import java.util.ArrayList;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;
import nc.vo.scm.bd.SmartVODataUtils;
import nc.vo.scm.ic.bill.InvVO;

/**
 * 此处插入类型说明。
 *
 * 创建日期：(2001-7-10)
 * @author：
 */
public class MaterialledgerVO extends CircularlyAccessibleValueObject
{
    private String m_cmaterialledgerid;

    private String m_corderid;

    private String m_corder_bid;

    private String m_pk_corp;

    private String m_cprocessmangid;

    private String m_cprocessbaseid;

    private String m_cmaterialmangid;

    private String m_cmaterialbaseid;

    private String m_cvendorid;

    private String m_cbillid;

    private String m_cbill_bid;

    private UFDate m_dbilldate;

    private String m_ccredenceid;

    private UFDouble m_nnum;

    private UFDouble m_nprice;

    private UFDouble m_nmny;

    private String m_vbatch;

    private UFDouble m_nprocessmny;

    private String m_isourcetype;

    private String m_caccountyear;

    private String m_vmemo;

    private String m_vdef6;

    private String m_vdef5;

    private String m_vdef4;

    private String m_vdef3;

    private String m_vdef2;

    private String m_vdef1;

    private String m_vfree5;

    private String m_vfree4;

    private String m_vfree3;

    private String m_vfree2;

    private String m_vfree1;

    private UFDate m_dbizdate = null;//修改：材料核销、暂估，生成的存货核算委外加工收货单，没有业务日期；

    private String m_cvendormangid;

    //自由项
    private nc.vo.scm.ic.bill.FreeVO m_freevo;

    //是不是原材料
    private String m_invshow;

    private nc.vo.scm.ic.bill.InvVO m_invvo;

    private UFDouble m_oldmoney;//材料核销行修改前原有金额（用于维护材料明细帐结存表）

    //
    private UFDouble m_oldnum;//材料核销行修改前原有数量（用于维护材料明细帐结存表）

    //ts
    private String m_ts;//在核销中记录ic_general_h 的ts, 便于并发控制

    //换算率
    private UFDouble hsl;

    //实入辅数量
    private UFDouble inassistnum;

    //辅计量单位
    private String astunitid;
    
    private UFDouble nshouldinnum;//gc

    public UFDouble getNshouldinnum() {
//		return nshouldinnum;
		Object value = getAttributeValue("nshouldinnum");
        return SmartVODataUtils.getUFDouble(value);
	}

	public void setNshouldinnum(UFDouble nshouldinnum) {
		setAttributeValue("nshouldinnum", nshouldinnum);
	}

	/**
     * 使用主键字段进行初始化的构造子。
     *
     * 创建日期：(2001-7-10)
     */
    public MaterialledgerVO()
    {
    }

    /**
     * 使用主键进行初始化的构造子。
     *
     * 创建日期：(2001-7-10)
     * @param ??fieldNameForMethod?? 主键值
     */
    public MaterialledgerVO(String newCmaterialledgerid)
    {

        // 为主键字段赋值:
        m_cmaterialledgerid = newCmaterialledgerid;
    }

    /**
     * 根类Object的方法,克隆这个VO对象。
     *
     * 创建日期：(2001-7-10)
     */
    public Object clone()
    {

        // 复制基类内容并创建新的VO对象：
        Object o = null;
        try
        {
            o = super.clone();
        }
        catch (Exception e)
        {
        }
        MaterialledgerVO materialledger = (MaterialledgerVO) o;

        // 你在下面复制本VO对象的所有属性：

        return materialledger;
    }

    /**
     * 返回数值对象的显示名称。
     *
     * 创建日期：(2001-7-10)
     * @return java.lang.String 返回数值对象的显示名称。
     */
    public String getEntityName()
    {

        return "Materialledger";
    }

    /**
     * 返回对象标识，用来唯一定位对象。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getPrimaryKey()
    {

        return m_cmaterialledgerid;
    }

    /**
     * 设置对象标识，用来唯一定位对象。
     *
     * 创建日期：(2001-7-10)
     * @param m_cmaterialledgerid String
     */
    public void setPrimaryKey(String newCmaterialledgerid)
    {

        m_cmaterialledgerid = newCmaterialledgerid;
    }

    /**
     * 属性m_cmaterialledgerid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCmaterialledgerid()
    {
        return m_cmaterialledgerid;
    }

    /**
     * 属性m_corderid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCorderid()
    {
        return m_corderid;
    }

    /**
     * 属性m_corder_bid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCorder_bid()
    {
        return m_corder_bid;
    }

    /**
     * 属性m_pk_corp的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getPk_corp()
    {
        return m_pk_corp;
    }

    /**
     * 属性m_cprocessmangid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCprocessmangid()
    {
        return m_cprocessmangid;
    }

    /**
     * 属性m_cprocessbaseid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCprocessbaseid()
    {
        return m_cprocessbaseid;
    }

    /**
     * 属性m_cmaterialmangid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCmaterialmangid()
    {
        return m_cmaterialmangid;
    }

    /**
     * 属性m_cmaterialbaseid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCmaterialbaseid()
    {
        return m_cmaterialbaseid;
    }

    /**
     * 属性m_cvendorid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCvendorid()
    {
        return m_cvendorid;
    }

    /**
     * 属性m_cbillid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCbillid()
    {
        return m_cbillid;
    }

    /**
     * 属性m_cbill_bid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCbill_bid()
    {
        return m_cbill_bid;
    }

    /**
     * 属性m_dbilldate的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return UFDate
     */
    public UFDate getDbilldate()
    {
        return m_dbilldate;
    }

    /**
     * 属性m_ccredenceid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCcredenceid()
    {
        return m_ccredenceid;
    }

    /**
     * 属性m_nnum的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return UFDouble
     */
    public UFDouble getNnum()
    {
        return m_nnum;
    }

    /**
     * 属性m_nprice的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return UFDouble
     */
    public UFDouble getNprice()
    {
        return m_nprice;
    }

    /**
     * 属性m_nmny的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return UFDouble
     */
    public UFDouble getNmny()
    {
        return m_nmny;
    }

    /**
     * 属性m_vbatch的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVbatch()
    {
        return m_vbatch;
    }

    /**
     * 属性m_nprocessmny的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return UFDouble
     */
    public UFDouble getNprocessmny()
    {
        return m_nprocessmny;
    }

    /**
     * 属性m_isourcetype的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getIsourcetype()
    {
        return m_isourcetype;
    }

    /**
     * 属性m_caccountyear的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCaccountyear()
    {
        return m_caccountyear;
    }

    /**
     * 属性m_vmemo的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVmemo()
    {
        return m_vmemo;
    }

    /**
     * 属性m_vdef6的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVdef6()
    {
        return m_vdef6;
    }

    /**
     * 属性m_vdef5的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVdef5()
    {
        return m_vdef5;
    }

    /**
     * 属性m_vdef4的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVdef4()
    {
        return m_vdef4;
    }

    /**
     * 属性m_vdef3的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVdef3()
    {
        return m_vdef3;
    }

    /**
     * 属性m_vdef2的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVdef2()
    {
        return m_vdef2;
    }

    /**
     * 属性m_vdef1的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVdef1()
    {
        return m_vdef1;
    }

    /**
     * 属性m_vfree5的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVfree5()
    {
        return m_vfree5;
    }

    /**
     * 属性m_vfree4的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVfree4()
    {
        return m_vfree4;
    }

    /**
     * 属性m_vfree3的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVfree3()
    {
        return m_vfree3;
    }

    /**
     * 属性m_vfree2的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVfree2()
    {
        return m_vfree2;
    }

    /**
     * 属性m_vfree1的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getVfree1()
    {
        return m_vfree1;
    }

    /**
     * 获得属性 <换算率/hsl>的值。
     *
     *
     * 参数说明: 属性itemkey
     *
     * return UFDouble
     *
     * Generated By CodeSeed 3.1 修改记录： 修改人, 日期, 说明
     *
     *
     */
    public UFDouble getHsl()
    {
        Object value = getAttributeValue("hsl");
        return SmartVODataUtils.getUFDouble(value);
    }

    /**
     * 获得属性 <实入辅数量/ninassistnum>的值。
     *
     *
     * 参数说明: 属性itemkey
     *
     * return UFDouble
     *
     * Generated By CodeSeed 3.1 修改记录： 修改人, 日期, 说明
     *
     *
     */
    public UFDouble getNinassistnum()
    {
        Object value = getAttributeValue("ninassistnum");
        return SmartVODataUtils.getUFDouble(value);
    }

    /**
     * 给属性 <实入辅数量/ninassistnum>赋值。
     *
     *
     *
     * return void
     *
     * Generated By CodeSeed 3.1 修改记录： 修改人, 日期, 说明
     *
     *
     */
    public void setNinassistnum(UFDouble value)
    {
        setAttributeValue("ninassistnum", value);
    }

    /**
     * 给属性 <换算率/hsl>赋值。
     *
     *
     *
     * return void
     *
     * Generated By CodeSeed 3.1 修改记录： 修改人, 日期, 说明
     *
     *
     */
    public void setHsl(UFDouble value)
    {
        setAttributeValue("hsl", value);
    }

    /**
     * 属性m_cmaterialledgerid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cmaterialledgerid String
     */
    public void setCmaterialledgerid(String newCmaterialledgerid)
    {

        m_cmaterialledgerid = newCmaterialledgerid;
    }

    /**
     * 属性m_corderid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_corderid String
     */
    public void setCorderid(String newCorderid)
    {

        m_corderid = newCorderid;
    }

    /**
     * 属性m_corder_bid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_corder_bid String
     */
    public void setCorder_bid(String newCorder_bid)
    {

        m_corder_bid = newCorder_bid;
    }

    /**
     * 属性m_pk_corp的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_pk_corp String
     */
    public void setPk_corp(String newPk_corp)
    {

        m_pk_corp = newPk_corp;
    }

    /**
     * 属性m_cprocessmangid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cprocessmangid String
     */
    public void setCprocessmangid(String newCprocessmangid)
    {

        m_cprocessmangid = newCprocessmangid;
    }

    /**
     * 属性m_cprocessbaseid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cprocessbaseid String
     */
    public void setCprocessbaseid(String newCprocessbaseid)
    {

        m_cprocessbaseid = newCprocessbaseid;
    }

    /**
     * 属性m_cmaterialmangid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cmaterialmangid String
     */
    public void setCmaterialmangid(String newCmaterialmangid)
    {

        m_cmaterialmangid = newCmaterialmangid;
    }

    /**
     * 属性m_cmaterialbaseid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cmaterialbaseid String
     */
    public void setCmaterialbaseid(String newCmaterialbaseid)
    {

        m_cmaterialbaseid = newCmaterialbaseid;
    }

    /**
     * 属性m_cvendorid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cvendorid String
     */
    public void setCvendorid(String newCvendorid)
    {

        m_cvendorid = newCvendorid;
    }

    /**
     * 属性m_cbillid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cbillid String
     */
    public void setCbillid(String newCbillid)
    {

        m_cbillid = newCbillid;
    }

    /**
     * 属性m_cbill_bid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cbill_bid String
     */
    public void setCbill_bid(String newCbill_bid)
    {

        m_cbill_bid = newCbill_bid;
    }

    /**
     * 属性m_dbilldate的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_dbilldate UFDate
     */
    public void setDbilldate(UFDate newDbilldate)
    {

        m_dbilldate = newDbilldate;
    }

    /**
     * 属性m_ccredenceid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_ccredenceid String
     */
    public void setCcredenceid(String newCcredenceid)
    {

        m_ccredenceid = newCcredenceid;
    }

    /**
     * 属性m_nnum的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_nnum UFDouble
     */
    public void setNnum(UFDouble newNnum)
    {

        m_nnum = newNnum;
    }

    /**
     * 属性m_nprice的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_nprice UFDouble
     */
    public void setNprice(UFDouble newNprice)
    {

        m_nprice = newNprice;
    }

    /**
     * 属性m_nmny的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_nmny UFDouble
     */
    public void setNmny(UFDouble newNmny)
    {

        m_nmny = newNmny;
    }

    /**
     * 属性m_vbatch的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vbatch String
     */
    public void setVbatch(String newVbatch)
    {

        m_vbatch = newVbatch;
    }

    /**
     * 属性m_nprocessmny的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_nprocessmny UFDouble
     */
    public void setNprocessmny(UFDouble newNprocessmny)
    {

        m_nprocessmny = newNprocessmny;
    }

    /**
     * 属性m_isourcetype的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_isourcetype String
     */
    public void setIsourcetype(String newIsourcetype)
    {

        m_isourcetype = newIsourcetype;
    }

    /**
     * 属性m_caccountyear的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_caccountyear String
     */
    public void setCaccountyear(String newCaccountyear)
    {

        m_caccountyear = newCaccountyear;
    }

    /**
     * 属性m_vmemo的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vmemo String
     */
    public void setVmemo(String newVmemo)
    {

        m_vmemo = newVmemo;
    }

    /**
     * 属性m_vdef6的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vdef6 String
     */
    public void setVdef6(String newVdef6)
    {

        m_vdef6 = newVdef6;
    }

    /**
     * 属性m_vdef5的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vdef5 String
     */
    public void setVdef5(String newVdef5)
    {

        m_vdef5 = newVdef5;
    }

    /**
     * 属性m_vdef4的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vdef4 String
     */
    public void setVdef4(String newVdef4)
    {

        m_vdef4 = newVdef4;
    }

    /**
     * 属性m_vdef3的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vdef3 String
     */
    public void setVdef3(String newVdef3)
    {

        m_vdef3 = newVdef3;
    }

    /**
     * 属性m_vdef2的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vdef2 String
     */
    public void setVdef2(String newVdef2)
    {

        m_vdef2 = newVdef2;
    }

    /**
     * 属性m_vdef1的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vdef1 String
     */
    public void setVdef1(String newVdef1)
    {

        m_vdef1 = newVdef1;
    }

    /**
     * 属性m_vfree5的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vfree5 String
     */
    public void setVfree5(String newVfree5)
    {

        m_vfree5 = newVfree5;
    }

    /**
     * 属性m_vfree4的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vfree4 String
     */
    public void setVfree4(String newVfree4)
    {

        m_vfree4 = newVfree4;
    }

    /**
     * 属性m_vfree3的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vfree3 String
     */
    public void setVfree3(String newVfree3)
    {

        m_vfree3 = newVfree3;
    }

    /**
     * 属性m_vfree2的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vfree2 String
     */
    public void setVfree2(String newVfree2)
    {

        m_vfree2 = newVfree2;
    }

    /**
     * 属性m_vfree1的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_vfree1 String
     */
    public void setVfree1(String newVfree1)
    {

        m_vfree1 = newVfree1;
    }

    /**
     * 验证对象各属性之间的数据逻辑正确性。
     *
     * 创建日期：(2001-7-10)
     * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
     *     ValidationException，对错误进行解释。
     */
    public void validate() throws ValidationException
    {

        ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
        // 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
        if (m_nnum == null)
        {
            errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes()
                    .getStrByID("401205", "UPT401205-000011")/*@res "入库/材料数量"*/));
        }
        //comment by yye 2005-12-08 Begin
        //	if (m_nprice == null) {
        //		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("401205","UPT401205-000012")/*@res "材料单价"*/));
        //	}
        //	if(m_nmny== null){
        //		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("401205","UPT401205-000002")/*@res "材料金额"*/));
        //	}
        ///comment by yye 2005-12-08 end

        // construct the exception message:
        if (errFields.size() > 0)
        {
            String[] temp = (String[]) errFields.toArray(new String[0]);
            String strTmp = "";
            strTmp += temp[0];
            for (int i = 1; i < temp.length; i++)
            {
                strTmp += nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("40120003", "UPPSCMCommon-000000")/*@res "、"*/;
                strTmp += temp[i];
            }
            StringBuffer message = new StringBuffer();
            message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("40120003", "UPP40120003-000006",
                    null, new String[] { strTmp })/*@res "下列字段：{0}"*/);
            throw new NullFieldException(message.toString());
        }
    }

    /**
     * <p>需要在一个循环中访问的属性的名称数组。
     * <p>
     * 创建日期：(??Date??)
     * @return java.lang.String[]
     */
    public java.lang.String[] getAttributeNames()
    {

        return new String[] { "corderid", "corder_bid", "pk_corp", "cprocessmangid", "cprocessbaseid",
                "cmaterialmangid", "cmaterialbaseid", "cvendorid", "cbillid", "cbill_bid", "dbilldate", "ccredenceid",
                "nnum", "nprice", "nmny", "vbatch", "nprocessmny", "isourcetype", "caccountyear", "vmemo", "vdef6",
                "vdef5", "vdef4", "vdef3", "vdef2", "vdef1", "vfree5", "vfree4", "vfree3", "vfree2", "vfree1", "ts",
                "dbizdate", "inassistnum", "hsl", "astunitid" ,"nshouldinnum"};
    }

    /**
     *  <p>根据一个属性名称字符串该属性的值。
     *  <p>
     * 创建日期：(2001-7-10)
     * @param key java.lang.String
     */
    public Object getAttributeValue(String attributeName)
    {

        if (attributeName.equals("cmaterialledgerid"))
        {
            return m_cmaterialledgerid;
        }
        else if (attributeName.equals("corderid"))
        {
            return m_corderid;
        }
        else if (attributeName.equals("corder_bid"))
        {
            return m_corder_bid;
        }
        else if (attributeName.equals("pk_corp"))
        {
            return m_pk_corp;
        }
        else if (attributeName.equals("cprocessmangid"))
        {
            return m_cprocessmangid;
        }
        else if (attributeName.equals("cprocessbaseid"))
        {
            return m_cprocessbaseid;
        }
        else if (attributeName.equals("cmangid"))
        {
            return m_cmaterialmangid;
        }
        else if (attributeName.equals("cbaseid"))
        {
            return m_cmaterialbaseid;
        }
        else if (attributeName.equals("cvendorbaseid"))
        {
            return m_cvendorid;
        }
        else if (attributeName.equals("cvendormangid"))
        {
            return m_cvendormangid;
        }
        else if (attributeName.equals("cbillid"))
        {
            return m_cbillid;
        }
        else if (attributeName.equals("cbill_bid"))
        {
            return m_cbill_bid;
        }
        else if (attributeName.equals("dbilldate"))
        {
            return m_dbilldate;
        }
        else if (attributeName.equals("ccredenceid"))
        {
            return m_ccredenceid;
        }
        else if (attributeName.equals("nnum"))
        {
            return m_nnum;
        }
        //gc
        else if (attributeName.equals("nshouldinnum"))
        {
            return nshouldinnum;
        }
        else if (attributeName.equals("nprice"))
        {
            return m_nprice;
        }
        else if (attributeName.equals("nmny"))
        {
            return m_nmny;
        }
        else if (attributeName.equals("vbatch"))
        {
            return m_vbatch;
        }
        else if (attributeName.equals("nprocessmny"))
        {
            return m_nprocessmny;
        }
        else if (attributeName.equals("isourcetype"))
        {
            return m_isourcetype;
        }
        else if (attributeName.equals("caccountyear"))
        {
            return m_caccountyear;
        }
        else if (attributeName.equals("vmemo"))
        {
            return m_vmemo;
        }
        else if (attributeName.equals("bismaterial"))
        {
            return m_invshow;
        }
        else if (attributeName.equals("vdef6"))
        {
            return m_vdef6;
        }
        else if (attributeName.equals("vdef5"))
        {
            return m_vdef5;
        }
        else if (attributeName.equals("vdef4"))
        {
            return m_vdef4;
        }
        else if (attributeName.equals("vdef3"))
        {
            return m_vdef3;
        }
        else if (attributeName.equals("vdef2"))
        {
            return m_vdef2;
        }
        else if (attributeName.equals("vdef1"))
        {
            return m_vdef1;
        }
        else if (attributeName.equals("vfree5"))
        {
            return m_vfree5;
        }
        else if (attributeName.equals("vfree4"))
        {
            return m_vfree4;
        }
        else if (attributeName.equals("vfree3"))
        {
            return m_vfree3;
        }
        else if (attributeName.equals("vfree2"))
        {
            return m_vfree2;
        }
        else if (attributeName.equals("vfree1"))
        {
            return m_vfree1;
        }
        else if (attributeName.equals("invvo"))
        {
            return m_invvo;
        }
        else if (attributeName.equals("oldnum"))
        {
            return m_oldnum;
        }
        else if (attributeName.equals("oldmoney"))
        {
            return m_oldmoney;
        }
        else if (attributeName.equals("ts"))
        {
            return m_ts;
        }
        else if (attributeName.equals("dbizdate"))
        {
            return m_dbizdate;
        }
        else if (attributeName.equals("inassistnum"))
        {
            return inassistnum;
        }
        else if (attributeName.equals("hsl"))
        {
            return hsl;
        }
        else if (attributeName.equals("astunitid"))
        {
            return astunitid;
        }

        return null;
    }

    /**
     *  <p>对参数name对型的属性设置值。
     *  <p>
     * 创建日期：(2001-7-10)
     * @param key java.lang.String
     */
    public void setAttributeValue(String name, Object value)
    {

        try
        {
            if (name.equals("cmaterialledgerid"))
            {
                m_cmaterialledgerid = (String) value;
            }
            else if (name.equals("corderid"))
            {
                m_corderid = (String) value;
            }
            else if (name.equals("corder_bid"))
            {
                m_corder_bid = (String) value;
            }
            else if (name.equals("pk_corp"))
            {
                m_pk_corp = (String) value;
            }
            else if (name.equals("cprocessmangid"))
            {
                m_cprocessmangid = (String) value;
            }
            else if (name.equals("cprocessbaseid"))
            {
                m_cprocessbaseid = (String) value;
            }
            else if (name.equals("cmangid"))
            {
                m_cmaterialmangid = (String) value;
            }
            else if (name.equals("cbaseid"))
            {
                m_cmaterialbaseid = (String) value;
            }
            else if (name.equals("cvendorbaseid"))
            {
                m_cvendorid = (String) value;
            }
            else if (name.equals("cvendormangid"))
            {
                m_cvendormangid = (String) value;
            }
            else if (name.equals("cbillid"))
            {
                m_cbillid = (String) value;
            }
            else if (name.equals("cbill_bid"))
            {
                m_cbill_bid = (String) value;
            }
            else if (name.equals("dbilldate"))
            {
                m_dbilldate = (UFDate) value;
            }
            else if (name.equals("ccredenceid"))
            {
                m_ccredenceid = (String) value;
            }
            else if (name.equals("nnum"))
            {
                m_nnum = (UFDouble) value;
            }
            //gc
            else if (name.equals("nshouldinnum"))
            {
            	nshouldinnum = (UFDouble) value;
            }
            else if (name.equals("nprice"))
            {
                m_nprice = (UFDouble) value;
            }
            else if (name.equals("nmny"))
            {
                m_nmny = (UFDouble) value;
            }
            else if (name.equals("vbatch"))
            {
                m_vbatch = (String) value;
            }
            else if (name.equals("nprocessmny"))
            {
                m_nprocessmny = (UFDouble) value;
            }
            else if (name.equals("isourcetype"))
            {
                m_isourcetype = (String) value;
            }
            else if (name.equals("caccountyear"))
            {
                m_caccountyear = (String) value;
            }
            else if (name.equals("vmemo"))
            {
                m_vmemo = (String) value;
            }
            else if (name.equals("bismaterial"))
            {
                m_invshow = (String) value;
            }
            else if (name.equals("vdef6"))
            {
                m_vdef6 = (String) value;
            }
            else if (name.equals("vdef5"))
            {
                m_vdef5 = (String) value;
            }
            else if (name.equals("vdef4"))
            {
                m_vdef4 = (String) value;
            }
            else if (name.equals("vdef3"))
            {
                m_vdef3 = (String) value;
            }
            else if (name.equals("vdef2"))
            {
                m_vdef2 = (String) value;
            }
            else if (name.equals("vdef1"))
            {
                m_vdef1 = (String) value;
            }
            else if (name.equals("vfree5"))
            {
                m_vfree5 = (String) value;
            }
            else if (name.equals("vfree4"))
            {
                m_vfree4 = (String) value;
            }
            else if (name.equals("vfree3"))
            {
                m_vfree3 = (String) value;
            }
            else if (name.equals("vfree2"))
            {
                m_vfree2 = (String) value;
            }
            else if (name.equals("vfree1"))
            {
                m_vfree1 = (String) value;
            }
            else if (name.equals("oldnum"))
            {
                m_oldnum = (UFDouble) value;
            }
            else if (name.equals("oldmoney"))
            {
                m_oldmoney = (UFDouble) value;
            }
            else if ("ts".equals(name))
            {
                m_ts = (String) value;
            }
            else if (name.equals("vfree0"))
            {

                if (m_freevo != null)
                    m_freevo.setAttributeValue(name, value == null ? "" : value.toString());
                else
                {
                    m_freevo = new nc.vo.scm.ic.bill.FreeVO();
                    m_freevo.setAttributeValue(name, value);
                }
            }
            else if (name.equals("invvo"))
            {
                m_invvo = (nc.vo.scm.ic.bill.InvVO) value;
            }
            else if (name.equals("dbizdate"))
            {
                m_dbizdate = (UFDate) value;
            }
            else if (name.equals("inassistnum"))
            {
                inassistnum = (UFDouble) value;
            }
            else if (name.equals("hsl"))
            {
                hsl = (UFDouble) value;
            }
            else if (name.equals("castunitid"))
            {
                astunitid = (String) value;
            }
        }
        catch (ClassCastException e)
        {
            throw new ClassCastException("setAttributeValue方法中为 " + name + " 赋值时类型转换错误！（值：" + value + "）");/*-=notranslate=-*/
        }
    }

    /**
     * 属性m_vfree3的Getter方法。
     *
     * 创建日期：(2001-6-20)
     * @return String
     */
    public String getCinvshow()
    {
        return m_invshow;
    }

    /**
     * 属性m_cvendorid的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public String getCvendormangid()
    {
        return m_cvendormangid;
    }

    /**
     * 属性m_caccountyear的Getter方法。
     *
     * 创建日期：(2001-7-10)
     * @return String
     */
    public InvVO getInvVO()
    {
        return m_invvo;
    }

    /**
     * 属性m_naccumarrvnum的Getter方法。
     *
     * 创建日期：(2001-6-23)
     * @return UFDouble
     */
    public UFDouble getNoldmoney()
    {
        return m_oldmoney;
    }

    /**
     * 属性m_naccumarrvnum的Getter方法。
     *
     * 创建日期：(2001-6-23)
     * @return UFDouble
     */
    public UFDouble getNoldnum()
    {
        return m_oldnum;
    }

    public String getTs()
    {

        return m_ts;
    }

    /**
     * 此处插入方法说明。
     * 创建日期：(01-6-21 10:42:38)
     * @return java.lang.String
     */
    public void setCinvshow(String invshow)
    {
        this.m_invshow = invshow;
    }

    /**
     * 属性m_cvendorid的setter方法。
     *
     * 创建日期：(2001-7-10)
     * @param newM_cvendorid String
     */
    public void setCvendormangid(String newCvendormangid)
    {

        m_cvendormangid = newCvendormangid;
    }

    /**
     * 属性m_naccumarrvnum的Getter方法。
     *
     * 创建日期：(2001-6-23)
     * @return UFDouble
     */
    public void setInvVO(nc.vo.scm.ic.bill.InvVO newInvVO)
    {
        m_invvo = newInvVO;
    }

    /**
     * 属性m_nmoney的setter方法。
     *
     * 创建日期：(2001-6-23)
     * @param newM_nmoney UFDouble
     */
    public void setNoldmoney(UFDouble newNoldmoney)
    {

        m_oldmoney = newNoldmoney;
    }

    /**
     * 属性m_naccumarrvnum的Getter方法。
     *
     * 创建日期：(2001-6-23)
     * @return UFDouble
     */
    public void setNoldnum(UFDouble newOldnum)
    {
        m_oldnum = newOldnum;
    }

    public void setTs(String sNewTs)
    {

        m_ts = sNewTs;
    }

    public nc.vo.pub.lang.UFDate getDbizdate()
    {
        return m_dbizdate;
    }

    public void setDbizdate(nc.vo.pub.lang.UFDate newM_dbizdate)
    {
        m_dbizdate = newM_dbizdate;
    }

    /**
     * 返回辅计量ID。
     * <p>
     * <b>examples:</b>
     * <p>
     * 使用示例
     * <p>
     * <b>参数说明</b>
     * @return
     * <p>
     * @author czp
     * @time 2007-9-14 下午02:06:14
     */
    public String getCastunitid()
    {
        return astunitid;
    }

    /**
     * 设置辅计量ID。
     * <p>
     * <b>examples:</b>
     * <p>
     * 使用示例
     * <p>
     * <b>参数说明</b>
     * @param strVal
     * <p>
     * @author czp
     * @time 2007-9-14 下午02:06:32
     */
    public void setCastunitid(String strVal)
    {
        astunitid = strVal;
    }
}